{"version":3,"sources":["cardUnicodes.js","model/constants.js","model/card.js","model/deck.js","model/pile.js","model/ReservedDeck.js","model/game.js","game.js","index.js"],"names":["CARDS","BACK","SPADES","HEARTS","DIAMONDS","CLUBS","cardValues","cardTypes","Card","cardType","value","Object","classCallCheck","this","facingUp","color","card","indexOf","Deck","cards","fill","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","err","return","shuffle","pop","length","activeCard","unshift","faceUp","Pile","lastCard","firstCard","isPreviousCard","concat","startingCardNo","slice","console","log","startingCardIndex","splice","ReservedDeck","cardsType","startingCard","isNextCard","Game","piles","reservedDecks","deck","setPiles","setReservedDecks","pileNo","pile","cardNo","drawCard","setCards","GAP_BETWEEN_CARD_OVERLAP","CARD_HEIGHT","props","top","height","className","draggable","react_default","a","createElement","onDragStart","onClick","style","id","Unicode","createPileCard","onCardDragStart","key","_ref","unicode","cardUnicodes","isFacingDown","getUnicode","game_Card","onDragOver","de","preventDefault","onDrop","onCardDrop","map","cardValue","GameComponent","_this","possibleConstructorReturn","getPrototypeOf","call","state","setup","draggingCardContainer","draggingCards","dragEvent","containerDiv","currentTarget","parentElement","containerCategory","getActiveCard","draggingCardNo","getCard","getCards","droppingContainerDiv","droppingContainerCategory","addCards","takeCards","takeCard","setState","changeActiveCard","reservedDeckDivs","reservedDeck","div","game_ReservedDeck","cardDrop","bind","cardDragStart","pileDivs","game_Pile","generateReservedDeckDivs","generatePileDivs","React","Component","ReactDOM","render","src_game","document","getElementById"],"mappings":"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","file":"static/js/main.b136ea01.chunk.js","sourcesContent":["const CARDS = {\n  BACK: [\"\\uD83C\\uDCA0\"],\n  SPADES: [\n    \"\\u{1F0A1}\",\n    \"\\u{1F0A2}\",\n    \"\\u{1F0A3}\",\n    \"\\u{1F0A4}\",\n    \"\\u{1F0A5}\",\n    \"\\u{1F0A6}\",\n    \"\\u{1F0A7}\",\n    \"\\u{1F0A8}\",\n    \"\\u{1F0A9}\",\n    \"\\u{1F0AA}\",\n    \"\\u{1F0AB}\",\n    \"\\u{1F0AD}\",\n    \"\\u{1F0AE}\"\n  ],\n  HEARTS: [\n    \"\\u{1F0B1}\",\n    \"\\u{1F0B2}\",\n    \"\\u{1F0B3}\",\n    \"\\u{1F0B4}\",\n    \"\\u{1F0B5}\",\n    \"\\u{1F0B6}\",\n    \"\\u{1F0B7}\",\n    \"\\u{1F0B8}\",\n    \"\\u{1F0B9}\",\n    \"\\u{1F0BA}\",\n    \"\\u{1F0BB}\",\n    \"\\u{1F0BD}\",\n    \"\\u{1F0BE}\"\n  ],\n  DIAMONDS: [\n    \"\\u{1F0C1}\",\n    \"\\u{1F0C2}\",\n    \"\\u{1F0C3}\",\n    \"\\u{1F0C4}\",\n    \"\\u{1F0C5}\",\n    \"\\u{1F0C6}\",\n    \"\\u{1F0C7}\",\n    \"\\u{1F0C8}\",\n    \"\\u{1F0C9}\",\n    \"\\u{1F0CA}\",\n    \"\\u{1F0CB}\",\n    \"\\u{1F0CD}\",\n    \"\\u{1F0CE}\"\n  ],\n  CLUBS: [\n    \"\\u{1F0D1}\",\n    \"\\u{1F0D2}\",\n    \"\\u{1F0D3}\",\n    \"\\u{1F0D4}\",\n    \"\\u{1F0D5}\",\n    \"\\u{1F0D6}\",\n    \"\\u{1F0D7}\",\n    \"\\u{1F0D8}\",\n    \"\\u{1F0D9}\",\n    \"\\u{1F0DA}\",\n    \"\\u{1F0DB}\",\n    \"\\u{1F0DD}\",\n    \"\\u{1F0DE}\"\n  ]\n};\n\nexport default CARDS;\n","const cardValues = [\n  \"A\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"J\",\n  \"Q\",\n  \"K\"\n];\nconst cardTypes = [\"DIAMONDS\", \"HEARTS\", \"SPADES\", \"CLUBS\"];\n\nexport { cardTypes, cardValues };\n","import { cardValues } from \"./constants\";\n\nclass Card {\n  constructor(cardType, value) {\n    this.cardType = cardType;\n    this.facingUp = false;\n    this.value = value;\n    this.color = \"black\";\n    if (cardType === \"DIAMONDS\" || cardType === \"HEARTS\") this.color = \"red\";\n  }\n\n  faceUp() {\n    this.facingUp = true;\n  }\n\n  isFacingDown() {\n    return !this.facingUp;\n  }\n\n  isNextCard(card) {\n    const cardIndex = cardValues.indexOf(card.value);\n    const thisIndex = cardValues.indexOf(this.value);\n    return cardIndex - 1 === thisIndex;\n  }\n\n  isPreviousCard(card) {\n    const cardIndex = cardValues.indexOf(card.value);\n    const thisIndex = cardValues.indexOf(this.value);\n    return cardIndex + 1 === thisIndex;\n  }\n}\n\nexport default Card;\n","import { cardTypes, cardValues } from \"./constants\";\nimport Card from \"./card\";\nimport { shuffle } from \"lodash\";\n\nclass Deck {\n  constructor() {\n    this.cards = [];\n    this.fill();\n  }\n\n  fill() {\n    for (let cardType of cardTypes) {\n      for (let value of cardValues) {\n        this.cards.push(new Card(cardType, value));\n      }\n    }\n    this.cards = shuffle(this.cards);\n  }\n\n  drawCard() {\n    return this.cards.pop();\n  }\n\n  getActiveCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  changeActiveCard() {\n    let activeCard = this.cards.pop();\n    this.cards.unshift(activeCard);\n  }\n\n  takeCard() {\n    let card = this.cards.pop();\n    card.faceUp();\n    return card;\n  }\n}\n\nexport default Deck;\n","class Pile {\n  setCards(cards) {\n    this.cards = cards;\n    const lastCard = this.cards[cards.length - 1];\n    lastCard.faceUp();\n  }\n\n  addCards(cards) {\n    const lastCard = this.cards[this.cards.length - 1];\n    const firstCard = cards[0];\n    if (lastCard) {\n      if (lastCard.color === firstCard.color) return false;\n      if (!lastCard.isPreviousCard(firstCard)) return false;\n    } else if (firstCard.value != \"K\") {\n      return false;\n    }\n    this.cards = this.cards.concat(cards);\n    return true;\n  }\n\n  getCards(startingCardNo) {\n    return this.cards.slice(startingCardNo - 1);\n  }\n\n  takeCards(cards) {\n    console.log(cards);\n    let startingCardIndex = this.cards.indexOf(cards[0]);\n    if (startingCardIndex != 0) {\n      this.cards[startingCardIndex - 1].faceUp();\n    }\n    return this.cards.splice(startingCardIndex);\n  }\n}\nexport default Pile;\n","class ReservedDeck {\n  constructor() {\n    this.cards = [];\n    this.cardsType = null;\n  }\n\n  addCards(cards) {\n    let startingCard = cards[0];\n    let lastCard = this.cards[this.cards.length - 1];\n    if (!lastCard && startingCard.value !== \"A\") return false;\n    if (this.cardsType && this.cardsType !== startingCard.cardType)\n      return false;\n    if (lastCard && !lastCard.isNextCard(startingCard)) return false;\n    this.cardsType = startingCard.cardType;\n    this.cards = this.cards.concat(cards);\n    return true;\n  }\n\n  getCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  getActiveCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  takeCard() {\n    let card = this.cards.pop();\n    card.faceUp();\n    return card;\n  }\n}\n\nexport default ReservedDeck;\n","import Deck from \"./deck\";\nimport Pile from \"./pile\";\nimport ReservedDeck from \"./ReservedDeck\";\nimport { cardTypes } from \"./constants\";\n\nclass Game {\n  constructor() {\n    this.piles = [];\n    this.reservedDecks = [];\n  }\n\n  setup() {\n    this.deck = new Deck();\n    this.setPiles();\n    this.setReservedDecks();\n    return this;\n  }\n\n  setReservedDecks() {\n    for (let cardType of cardTypes) {\n      this.reservedDecks.push(new ReservedDeck(cardType));\n    }\n  }\n\n  setPiles() {\n    for (let pileNo = 1; pileNo <= 7; pileNo++) {\n      let pile = new Pile();\n      let cards = [];\n      for (let cardNo = 1; cardNo <= pileNo; cardNo++) {\n        cards.push(this.deck.drawCard());\n      }\n      pile.setCards(cards);\n      this.piles.push(pile);\n    }\n  }\n}\n\nexport default Game;\n","import cardUnicodes from \"./cardUnicodes.js\";\nimport React from \"react\";\n\nimport \"./game.css\";\n\nimport Game from \"./model/game\";\nimport { cardValues } from \"./model/constants.js\";\n\nconst GAP_BETWEEN_CARD_OVERLAP = 8;\nconst CARD_HEIGHT = 19;\n\nfunction Card(props) {\n  let color = props.color || \"black\";\n  let top = props.top || 0;\n  let height = props.height || CARD_HEIGHT;\n  let className = props.className || \"\";\n  top += \"vh\";\n  height += \"vh\";\n  let draggable = props.draggable === undefined || props.draggable === true;\n  return (\n    <div\n      className={\"card \" + className}\n      draggable={draggable}\n      onDragStart={props.onDragStart}\n      onClick={props.onClick}\n      style={{ color, top, height }}\n      id={props.id}\n    >\n      {props.Unicode}\n    </div>\n  );\n}\n\nconst createPileCard = function(card, onCardDragStart, key, { top, height }) {\n  let unicode = cardUnicodes[\"BACK\"][0];\n  let draggable = false;\n  let color = \"black\";\n  if (!card.isFacingDown()) {\n    unicode = getUnicode(card);\n    draggable = true;\n    color = card.color;\n  }\n  return (\n    <Card\n      Unicode={unicode}\n      color={color}\n      className=\"pile-card\"\n      id={key}\n      key={key}\n      top={top}\n      onDragStart={onCardDragStart}\n      draggable={draggable}\n      height={height}\n    />\n  );\n};\n\nfunction Pile(props) {\n  let key = 0;\n  let top = -GAP_BETWEEN_CARD_OVERLAP;\n  let height = props.cards.length * GAP_BETWEEN_CARD_OVERLAP + CARD_HEIGHT;\n  return (\n    <div\n      className=\"pile\"\n      id={props.id}\n      onDragOver={de => de.preventDefault()}\n      onDrop={props.onCardDrop}\n    >\n      {props.cards.map(card => {\n        top += GAP_BETWEEN_CARD_OVERLAP;\n        height -= GAP_BETWEEN_CARD_OVERLAP;\n        key++;\n        return createPileCard(card, props.onCardDragStart, key, {\n          top,\n          height\n        });\n      })}\n    </div>\n  );\n}\n\nfunction ReservedDeck(props) {\n  let key = 1;\n  return (\n    <div\n      className=\"reserved-deck\"\n      onDragOver={de => de.preventDefault()}\n      onDrop={props.onCardDrop}\n      id={props.id}\n    >\n      {props.cards.map(card => (\n        <Card\n          Unicode={getUnicode(card)}\n          onDragStart={props.onCardDragStart}\n          color={card.color}\n          key={key++}\n        />\n      ))}\n    </div>\n  );\n}\n\nclass GameComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = new Game();\n    this.state.setup();\n    this.draggingCardContainer = null;\n    this.draggingCards = [];\n  }\n\n  cardDragStart(dragEvent) {\n    const containerDiv = dragEvent.currentTarget.parentElement;\n    const containerCategory = containerDiv.parentElement.id;\n    if (containerCategory === \"deck\") {\n      this.draggingCardContainer = this.state[containerCategory];\n      this.draggingCards = [this.draggingCardContainer.getActiveCard()];\n      return;\n    }\n    this.draggingCardContainer = this.state[containerCategory][\n      containerDiv.id - 1\n    ];\n    let draggingCardNo = dragEvent.currentTarget.id;\n\n    if (this.draggingCardContainer.getCard) {\n      this.draggingCards = [this.draggingCardContainer.getCard()];\n      return;\n    }\n    this.draggingCards = this.draggingCardContainer.getCards(draggingCardNo);\n  }\n\n  cardDrop(dragEvent) {\n    const droppingContainerDiv = dragEvent.currentTarget;\n    const droppingContainerCategory = droppingContainerDiv.parentElement.id;\n    const dropingContainer = this.state[droppingContainerCategory][\n      droppingContainerDiv.id - 1\n    ];\n    const isDropped = dropingContainer.addCards(this.draggingCards);\n    if (isDropped) {\n      if (this.draggingCardContainer.takeCards)\n        this.draggingCardContainer.takeCards(this.draggingCards);\n      if (this.draggingCardContainer.takeCard)\n        this.draggingCardContainer.takeCard(this.draggingCards[0]);\n      this.setState(this.state);\n    }\n  }\n\n  changeActiveCard() {\n    this.state.deck.changeActiveCard();\n    this.setState(this.state);\n  }\n\n  generateReservedDeckDivs() {\n    let reservedDeckDivs = [];\n    let key = 1;\n    for (let reservedDeck of this.state.reservedDecks) {\n      let div = (\n        <ReservedDeck\n          cards={reservedDeck.cards}\n          id={key}\n          key={key++}\n          onCardDrop={this.cardDrop.bind(this)}\n          onCardDragStart={this.cardDragStart.bind(this)}\n        />\n      );\n      reservedDeckDivs.push(div);\n    }\n    return reservedDeckDivs;\n  }\n\n  generatePileDivs() {\n    let pileDivs = [];\n    let key = 1;\n    for (let pile of this.state.piles) {\n      let div = (\n        <Pile\n          cards={pile.cards}\n          id={key}\n          key={key++}\n          onCardDragStart={this.cardDragStart.bind(this)}\n          onCardDrop={this.cardDrop.bind(this)}\n        />\n      );\n      pileDivs.push(div);\n    }\n    return pileDivs;\n  }\n\n  render() {\n    let activeCard = this.state.deck.getActiveCard();\n\n    let reservedDeckDivs = this.generateReservedDeckDivs();\n    let pileDivs = this.generatePileDivs();\n    return (\n      <div className=\"game\">\n        <div className=\"horizontal-layer\">\n          <div className=\"deck\" id=\"deck\">\n            <div>\n              <Card\n                Unicode={cardUnicodes[\"BACK\"][0]}\n                draggable={false}\n                onClick={this.changeActiveCard.bind(this)}\n                key=\"1\"\n              />\n            </div>\n            <div>\n              <Card\n                Unicode={getUnicode(activeCard)}\n                draggable={true}\n                color={activeCard.color}\n                onDragStart={this.cardDragStart.bind(this)}\n                key=\"2\"\n              />\n            </div>\n          </div>\n\n          <div className=\"deck\" id=\"reservedDecks\">\n            {reservedDeckDivs}\n          </div>\n        </div>\n\n        <div className=\"horizontal-layer tableau\">\n          <div className=\"piles\" id=\"piles\">\n            {pileDivs}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction getUnicode(card) {\n  let cardValue = cardValues.indexOf(card.value);\n  let cardUnicode = cardUnicodes[card.cardType][cardValue];\n  return cardUnicode;\n}\n\nexport default GameComponent;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./index.css\";\nimport GameComponent from \"./game.js\";\n\nReactDOM.render(<GameComponent />, document.getElementById(\"root\"));\n"],"sourceRoot":""}