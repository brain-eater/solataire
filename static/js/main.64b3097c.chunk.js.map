{"version":3,"sources":["cardUnicodes.js","model/constants.js","model/card.js","model/deck.js","model/pile.js","model/ReservedDeck.js","model/game.js","game.js","index.js"],"names":["CARDS","BACK","SPADES","HEARTS","DIAMONDS","CLUBS","cardValues","cardTypes","Card","cardType","value","Object","classCallCheck","this","facingUp","color","card","indexOf","Deck","cards","fill","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","err","return","shuffle","pop","length","activeCard","unshift","faceUp","Pile","lastCard","firstCard","isPreviousCard","concat","startingCardNo","slice","console","log","startingCardIndex","splice","ReservedDeck","cardsType","startingCard","sameType","isNextCard","_this","sameTypeCards","filter","Game","piles","reservedDecks","deck","setPiles","setReservedDecks","pileNo","pile","cardNo","drawCard","setCards","GAP_BETWEEN_CARD_OVERLAP","CARD_HEIGHT","props","top","height","className","draggable","react_default","a","createElement","onDragStart","onDoubleClick","style","id","Unicode","createPileCard","onCardDragStart","onCardDoubleClick","key","_ref","unicode","cardUnicodes","isFacingDown","getUnicode","game_Card","onDragOver","de","preventDefault","onDrop","onCardDrop","map","cardElement","cardValue","GameComponent","possibleConstructorReturn","getPrototypeOf","call","state","setup","draggingCardContainer","draggingCards","dragEvent","containerDiv","currentTarget","parentElement","containerCategory","getActiveCard","draggingCardNo","getCard","getCards","droppingContainerDiv","droppingContainerCategory","addCards","takeCards","takeCard","setState","event","getLastCard","isPlaced","changeActiveCard","reservedDeckDivs","reservedDeck","div","game_ReservedDeck","cardDrop","bind","cardDragStart","pileDivs","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","game_Pile","handleDoubleClick","generateReservedDeckDivs","generatePileDivs","onClick","React","Component","ReactDOM","render","src_game","document","getElementById"],"mappings":"6PAgEeA,EAhED,CACZC,KAAM,CAAC,gBACPC,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEFC,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEFC,SAAU,CACR,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEFC,MAAO,CACL,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBC5DEC,SAAa,CACjB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,MAEIC,EAAY,CAAC,WAAY,SAAU,SAAU,SCiBpCC,aA7Bb,SAAAA,EAAYC,EAAUC,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAC5BK,KAAKJ,SAAWA,EAChBI,KAAKC,UAAW,EAChBD,KAAKH,MAAQA,EACbG,KAAKE,MAAQ,QACI,aAAbN,GAAwC,WAAbA,IAAuBI,KAAKE,MAAQ,4DAInEF,KAAKC,UAAW,yCAIhB,OAAQD,KAAKC,4CAGJE,GAGT,OAFkBV,EAAWW,QAAQD,EAAKN,OAEvB,IADDJ,EAAWW,QAAQJ,KAAKH,8CAI7BM,GAGb,OAFkBV,EAAWW,QAAQD,EAAKN,OAEvB,IADDJ,EAAWW,QAAQJ,KAAKH,uBCY/BQ,aAlCb,SAAAA,IAAeP,OAAAC,EAAA,EAAAD,CAAAE,KAAAK,GACbL,KAAKM,MAAQ,GACbN,KAAKO,0DAGA,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACL,QAAAC,EAAAC,EAAqBnB,EAArBoB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAgC,KAAvBZ,EAAuBgB,EAAAf,MAAAqB,GAAA,EAAAC,GAAA,EAAAC,OAAAT,EAAA,IAC9B,QAAAU,EAAAC,EAAkB7B,EAAlBqB,OAAAC,cAAAG,GAAAG,EAAAC,EAAAN,QAAAC,MAAAC,GAAA,EAA8B,KAArBrB,EAAqBwB,EAAAxB,MAC5BG,KAAKM,MAAMiB,KAAK,IAAI5B,EAAKC,EAAUC,KAFP,MAAA2B,GAAAL,GAAA,EAAAC,EAAAI,EAAA,YAAAN,GAAA,MAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,KAD3B,MAAAI,GAAAf,GAAA,EAAAC,EAAAc,EAAA,YAAAhB,GAAA,MAAAK,EAAAY,QAAAZ,EAAAY,SAAA,WAAAhB,EAAA,MAAAC,GAMLV,KAAKM,MAAQoB,kBAAQ1B,KAAKM,0CAI1B,OAAON,KAAKM,MAAMqB,8CAIlB,OAAO3B,KAAKM,MAAMN,KAAKM,MAAMsB,OAAS,8CAItC,IAAIC,EAAa7B,KAAKM,MAAMqB,MAC5B3B,KAAKM,MAAMwB,QAAQD,sCAInB,IAAI1B,EAAOH,KAAKM,MAAMqB,MAEtB,OADAxB,EAAK4B,SACE5B,WCGI6B,mGArCJ1B,GACPN,KAAKM,MAAQA,EACIN,KAAKM,MAAMA,EAAMsB,OAAS,GAClCG,0CAGFzB,GACP,IAAM2B,EAAWjC,KAAKM,MAAMN,KAAKM,MAAMsB,OAAS,GAC1CM,EAAY5B,EAAM,GACxB,GAAI2B,EAAU,CACZ,GAAIA,EAAS/B,QAAUgC,EAAUhC,MAAO,OAAO,EAC/C,IAAK+B,EAASE,eAAeD,GAAY,OAAO,OAC3C,GAAuB,KAAnBA,EAAUrC,MACnB,OAAO,EAGT,OADAG,KAAKM,MAAQN,KAAKM,MAAM8B,OAAO9B,IACxB,mCAGA+B,GACP,OAAOrC,KAAKM,MAAMgC,MAAMD,EAAiB,yCAIzC,OAAOrC,KAAKM,MAAMN,KAAKM,MAAMsB,OAAS,qCAG9BtB,GACRiC,QAAQC,IAAIlC,GACZiC,QAAQC,IAAIxC,KAAKM,OACjB,IAAImC,EAAoBzC,KAAKM,MAAMF,QAAQE,EAAM,IAIjD,OAHyB,GAArBmC,GACFzC,KAAKM,MAAMmC,EAAoB,GAAGV,SAE7B/B,KAAKM,MAAMoC,OAAOD,YCDdE,aAjCb,SAAAA,IAAe7C,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,GACb3C,KAAKM,MAAQ,GACbN,KAAK4C,UAAY,0DAGVtC,GACP,IAAIuC,EAAevC,EAAM,GACrB2B,EAAWjC,KAAKM,MAAMN,KAAKM,MAAMsB,OAAS,GAE9C,OADK5B,KAAK4C,YAAW5C,KAAK4C,UAAYC,EAAajD,YAC9CI,KAAK8C,SAASxC,QACd2B,GAAmC,MAAvBY,EAAahD,WAC1BoC,IAAaA,EAASc,WAAWF,MACrC7C,KAAKM,MAAQN,KAAKM,MAAM8B,OAAO9B,IACxB,sCAGAA,GAAO,IAAA0C,EAAAhD,KACRiD,EAAgB3C,EAAM4C,OAAO,SAAA/C,GAAI,OAAIA,EAAKP,UAAYoD,EAAKJ,YACjE,OAAOtC,EAAMsB,SAAWqB,EAAcrB,yCAItC,OAAO5B,KAAKM,MAAMN,KAAKM,MAAMsB,OAAS,sCAItC,IAAIzB,EAAOH,KAAKM,MAAMqB,MAGtB,OAFAxB,EAAK4B,SACqB,IAAtB/B,KAAKM,MAAMsB,SAAc5B,KAAK4C,UAAY,MACvCzC,WCOIgD,aA/Bb,SAAAA,IAAerD,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,GACbnD,KAAKoD,MAAQ,GACbpD,KAAKqD,cAAgB,uDAOrB,OAHArD,KAAKsD,KAAO,IAAIjD,EAChBL,KAAKuD,WACLvD,KAAKwD,mBACExD,gDAGU,IAAAQ,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IACjB,QAAAC,EAAAC,EAAqBnB,EAArBoB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAgC,KAAvBZ,EAAuBgB,EAAAf,MAC9BG,KAAKqD,cAAc9B,KAAK,IAAIoB,EAAa/C,KAF1B,MAAA4B,GAAAf,GAAA,EAAAC,EAAAc,EAAA,YAAAhB,GAAA,MAAAK,EAAAY,QAAAZ,EAAAY,SAAA,WAAAhB,EAAA,MAAAC,uCAOjB,IAAK,IAAI+C,EAAS,EAAGA,GAAU,EAAGA,IAAU,CAG1C,IAFA,IAAIC,EAAO,IAAI1B,EACX1B,EAAQ,GACHqD,EAAS,EAAGA,GAAUF,EAAQE,IACrCrD,EAAMiB,KAAKvB,KAAKsD,KAAKM,YAEvBF,EAAKG,SAASvD,GACdN,KAAKoD,MAAM7B,KAAKmC,aCxBhBI,EAA2B,EAC3BC,EAAc,GAEpB,SAASpE,EAAKqE,GACZ,IAAI9D,EAAQ8D,EAAM9D,OAAS,QACvB+D,EAAMD,EAAMC,KAAO,EACnBC,EAASF,EAAME,QAAUH,EACzBI,EAAYH,EAAMG,WAAa,GACnCF,GAAO,KACPC,GAAU,KACV,IAAIE,OAAgCzD,IAApBqD,EAAMI,YAA+C,IAApBJ,EAAMI,UACvD,OACEC,EAAAC,EAAAC,cAAA,OACEJ,UAAW,QAAUA,EACrBC,UAAWA,EACXI,YAAaR,EAAMQ,YACnBC,cAAeT,EAAMS,cACrBC,MAAO,CAAExE,QAAO+D,MAAKC,UACrBS,GAAIX,EAAMW,IAETX,EAAMY,SAKb,IAAMC,EAAiB,SACrB1E,EACA2E,EACAC,EACAC,EAJqBC,GAMrB,IADEhB,EACFgB,EADEhB,IAAKC,EACPe,EADOf,OAEHgB,EAAUC,EAAY,KAAS,GAC/Bf,GAAY,EACZlE,EAAQ,QAMZ,OALKC,EAAKiF,iBACRF,EAAUG,EAAWlF,GACrBiE,GAAY,EACZlE,EAAQC,EAAKD,OAGbmE,EAAAC,EAAAC,cAACe,EAAD,CACEV,QAASM,EACThF,MAAOA,EACPiE,UAAU,YACVQ,GAAIK,EACJA,IAAKA,EACLf,IAAKA,EACLO,YAAaM,EACbL,cAAeM,EACfX,UAAWA,EACXF,OAAQA,KAKd,SAASlC,EAAKgC,GACZ,IAAIgB,EAAM,EACNf,GAAOH,EACPI,EAASF,EAAM1D,MAAMsB,OAASkC,EAA2BC,EACvDe,EAAuCd,EAAvCc,gBAAiBC,EAAsBf,EAAtBe,kBACvB,OACEV,EAAAC,EAAAC,cAAA,OACEJ,UAAU,OACVQ,GAAIX,EAAMW,GACVY,WAAY,SAAAC,GAAE,OAAIA,EAAGC,kBACrBC,OAAQ1B,EAAM2B,YAEb3B,EAAM1D,MAAMsF,IAAI,SAAAzF,GAIf,OAAO0E,EAAe1E,EAAM2E,EAAiBC,IAD7CC,EACqE,CACnEf,IAJFA,GAAOH,EAKLI,OAJFA,GAAUJ,OAWlB,SAASnB,EAAaqB,GACpB,IAAIgB,EAAM,EACNa,EAAc,GAWlB,OAVI7B,EAAM7D,OACR0F,EACExB,EAAAC,EAAAC,cAACe,EAAD,CACEV,QAASS,EAAWrB,EAAM7D,MAC1BqE,YAAaR,EAAMc,gBACnB5E,MAAO8D,EAAM7D,KAAKD,MAClB8E,IAAKA,OAKTX,EAAAC,EAAAC,cAAA,OACEJ,UAAU,4BACVoB,WAAY,SAAAC,GAAE,OAAIA,EAAGC,kBACrBC,OAAQ1B,EAAM2B,WACdhB,GAAIX,EAAMW,IAETkB,GAqJP,SAASR,EAAWlF,GAClB,IAAI2F,EAAYrG,EAAWW,QAAQD,EAAKN,OAExC,OADkBsF,EAAahF,EAAKP,UAAUkG,GAIjCC,kBArJb,SAAAA,EAAY/B,GAAO,IAAAhB,EAAA,OAAAlD,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACjB/C,EAAAlD,OAAAkG,EAAA,EAAAlG,CAAAE,KAAAF,OAAAmG,EAAA,EAAAnG,CAAAiG,GAAAG,KAAAlG,KAAMgE,KACDmC,MAAQ,IAAIhD,EACjBH,EAAKmD,MAAMC,QACXpD,EAAKqD,sBAAwB,KAC7BrD,EAAKsD,cAAgB,GALJtD,6EAQLuD,GACZ,IAAMC,EAAeD,EAAUE,cAAcC,cACvCC,EAAoBH,EAAaE,cAAc/B,GACrD,GAA0B,SAAtBgC,EAGF,OAFA3G,KAAKqG,sBAAwBrG,KAAKmG,MAAMQ,QACxC3G,KAAKsG,cAAgB,CAACtG,KAAKqG,sBAAsBO,kBAGnD5G,KAAKqG,sBAAwBrG,KAAKmG,MAAMQ,GACtCH,EAAa7B,GAAK,GAEpB,IAAIkC,EAAiBN,EAAUE,cAAc9B,GAEzC3E,KAAKqG,sBAAsBS,QAC7B9G,KAAKsG,cAAgB,CAACtG,KAAKqG,sBAAsBS,WAGnD9G,KAAKsG,cAAgBtG,KAAKqG,sBAAsBU,SAASF,oCAGlDN,GACP,IAAMS,EAAuBT,EAAUE,cACjCQ,EAA4BD,EAAqBN,cAAc/B,GAC5C3E,KAAKmG,MAAMc,GAClCD,EAAqBrC,GAAK,GAEOuC,SAASlH,KAAKsG,iBAE3CtG,KAAKqG,sBAAsBc,WAC7BnH,KAAKqG,sBAAsBc,UAAUnH,KAAKsG,eACxCtG,KAAKqG,sBAAsBe,UAC7BpH,KAAKqG,sBAAsBe,SAASpH,KAAKsG,cAAc,IACzDtG,KAAKqH,SAASrH,KAAKmG,kDAILmB,GAChB,IAAI7D,EAAS6D,EAAMb,cAAcC,cAAc/B,GAC3CxE,EAAOH,KAAKmG,MAAM/C,MAAMK,EAAS,GAAG8D,cACpCC,GAAW,EAHQhH,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIvB,QAAAC,EAAAC,EAAyBb,KAAKmG,MAAM9C,cAApCvC,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmD,CACjD,GADiDI,EAAAf,MAChCqH,SAAS,CAAC/G,IAAQ,CACjCqH,GAAW,EACX,QAPmB,MAAAhG,GAAAf,GAAA,EAAAC,EAAAc,EAAA,YAAAhB,GAAA,MAAAK,EAAAY,QAAAZ,EAAAY,SAAA,WAAAhB,EAAA,MAAAC,GAUlB8G,IACLxH,KAAKmG,MAAM/C,MAAMK,EAAS,GAAG0D,UAAU,CAAChH,IACxCH,KAAKqH,SAASrH,KAAKmG,mDAInBnG,KAAKmG,MAAM7C,KAAKmE,mBAChBzH,KAAKqH,SAASrH,KAAKmG,0DAInB,IAAIuB,EAAmB,GACnB1C,EAAM,EAFe9D,GAAA,EAAAC,GAAA,EAAAC,OAAAT,EAAA,IAGzB,QAAAU,EAAAC,EAAyBtB,KAAKmG,MAAM9C,cAApCvC,OAAAC,cAAAG,GAAAG,EAAAC,EAAAN,QAAAC,MAAAC,GAAA,EAAmD,KAA1CyG,EAA0CtG,EAAAxB,MAC7C+H,EACFvD,EAAAC,EAAAC,cAACsD,EAAD,CACE1H,KAAMwH,EAAab,UACnBnC,GAAIK,EACJA,IAAKA,IACLW,WAAY3F,KAAK8H,SAASC,KAAK/H,MAC/B8E,gBAAiB9E,KAAKgI,cAAcD,KAAK/H,QAG7C0H,EAAiBnG,KAAKqG,IAbC,MAAApG,GAAAL,GAAA,EAAAC,EAAAI,EAAA,YAAAN,GAAA,MAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,GAezB,OAAOsG,6CAIP,IAAIO,EAAW,GACXjD,EAAM,EAFOkD,GAAA,EAAAC,GAAA,EAAAC,OAAAzH,EAAA,IAGjB,QAAA0H,EAAAC,EAAiBtI,KAAKmG,MAAM/C,MAA5BtC,OAAAC,cAAAmH,GAAAG,EAAAC,EAAAtH,QAAAC,MAAAiH,GAAA,EAAmC,KAA1BxE,EAA0B2E,EAAAxI,MAC7B+H,EACFvD,EAAAC,EAAAC,cAACgE,EAAD,CACEjI,MAAOoD,EAAKpD,MACZqE,GAAIK,EACJD,kBAAmB/E,KAAKwI,kBAAkBT,KAAK/H,MAC/CgF,IAAKA,IACLF,gBAAiB9E,KAAKgI,cAAcD,KAAK/H,MACzC2F,WAAY3F,KAAK8H,SAASC,KAAK/H,QAGnCiI,EAAS1G,KAAKqG,IAdC,MAAApG,GAAA2G,GAAA,EAAAC,EAAA5G,EAAA,YAAA0G,GAAA,MAAAI,EAAA7G,QAAA6G,EAAA7G,SAAA,WAAA0G,EAAA,MAAAC,GAgBjB,OAAOH,mCAIP,IAAIpG,EAAa7B,KAAKmG,MAAM7C,KAAKsD,gBAE7Bc,EAAmB1H,KAAKyI,2BACxBR,EAAWjI,KAAK0I,mBACpB,OACErE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,QACbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,cACbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,OAAOQ,GAAG,QACvBN,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,0BACbE,EAAAC,EAAAC,cAACe,EAAD,CACEV,QAASO,EAAY,KAAS,GAC9Bf,WAAW,EACXuE,QAAS3I,KAAKyH,iBAAiBM,KAAK/H,MACpCgF,IAAI,OAGRX,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,eACbE,EAAAC,EAAAC,cAACe,EAAD,CACEV,QAASS,EAAWxD,GACpBuC,WAAW,EACXlE,MAAO2B,EAAW3B,MAClBsE,YAAaxE,KAAKgI,cAAcD,KAAK/H,MACrCgF,IAAI,QAKVX,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBAAqBQ,GAAG,iBACpC+C,IAILrD,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,YACbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,QAAQQ,GAAG,SACvBsD,YAzIeW,IAAMC,WC7GlCC,IAASC,OAAO1E,EAAAC,EAAAC,cAACyE,EAAD,MAAmBC,SAASC,eAAe","file":"static/js/main.64b3097c.chunk.js","sourcesContent":["const CARDS = {\n  BACK: [\"\\uD83C\\uDCA0\"],\n  SPADES: [\n    \"\\u{1F0A1}\",\n    \"\\u{1F0A2}\",\n    \"\\u{1F0A3}\",\n    \"\\u{1F0A4}\",\n    \"\\u{1F0A5}\",\n    \"\\u{1F0A6}\",\n    \"\\u{1F0A7}\",\n    \"\\u{1F0A8}\",\n    \"\\u{1F0A9}\",\n    \"\\u{1F0AA}\",\n    \"\\u{1F0AB}\",\n    \"\\u{1F0AD}\",\n    \"\\u{1F0AE}\"\n  ],\n  HEARTS: [\n    \"\\u{1F0B1}\",\n    \"\\u{1F0B2}\",\n    \"\\u{1F0B3}\",\n    \"\\u{1F0B4}\",\n    \"\\u{1F0B5}\",\n    \"\\u{1F0B6}\",\n    \"\\u{1F0B7}\",\n    \"\\u{1F0B8}\",\n    \"\\u{1F0B9}\",\n    \"\\u{1F0BA}\",\n    \"\\u{1F0BB}\",\n    \"\\u{1F0BD}\",\n    \"\\u{1F0BE}\"\n  ],\n  DIAMONDS: [\n    \"\\u{1F0C1}\",\n    \"\\u{1F0C2}\",\n    \"\\u{1F0C3}\",\n    \"\\u{1F0C4}\",\n    \"\\u{1F0C5}\",\n    \"\\u{1F0C6}\",\n    \"\\u{1F0C7}\",\n    \"\\u{1F0C8}\",\n    \"\\u{1F0C9}\",\n    \"\\u{1F0CA}\",\n    \"\\u{1F0CB}\",\n    \"\\u{1F0CD}\",\n    \"\\u{1F0CE}\"\n  ],\n  CLUBS: [\n    \"\\u{1F0D1}\",\n    \"\\u{1F0D2}\",\n    \"\\u{1F0D3}\",\n    \"\\u{1F0D4}\",\n    \"\\u{1F0D5}\",\n    \"\\u{1F0D6}\",\n    \"\\u{1F0D7}\",\n    \"\\u{1F0D8}\",\n    \"\\u{1F0D9}\",\n    \"\\u{1F0DA}\",\n    \"\\u{1F0DB}\",\n    \"\\u{1F0DD}\",\n    \"\\u{1F0DE}\"\n  ]\n};\n\nexport default CARDS;\n","const cardValues = [\n  \"A\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"J\",\n  \"Q\",\n  \"K\"\n];\nconst cardTypes = [\"DIAMONDS\", \"HEARTS\", \"SPADES\", \"CLUBS\"];\n\nexport { cardTypes, cardValues };\n","import { cardValues } from \"./constants\";\n\nclass Card {\n  constructor(cardType, value) {\n    this.cardType = cardType;\n    this.facingUp = false;\n    this.value = value;\n    this.color = \"black\";\n    if (cardType === \"DIAMONDS\" || cardType === \"HEARTS\") this.color = \"red\";\n  }\n\n  faceUp() {\n    this.facingUp = true;\n  }\n\n  isFacingDown() {\n    return !this.facingUp;\n  }\n\n  isNextCard(card) {\n    const cardIndex = cardValues.indexOf(card.value);\n    const thisIndex = cardValues.indexOf(this.value);\n    return cardIndex - 1 === thisIndex;\n  }\n\n  isPreviousCard(card) {\n    const cardIndex = cardValues.indexOf(card.value);\n    const thisIndex = cardValues.indexOf(this.value);\n    return cardIndex + 1 === thisIndex;\n  }\n}\n\nexport default Card;\n","import { cardTypes, cardValues } from \"./constants\";\nimport Card from \"./card\";\nimport { shuffle } from \"lodash\";\n\nclass Deck {\n  constructor() {\n    this.cards = [];\n    this.fill();\n  }\n\n  fill() {\n    for (let cardType of cardTypes) {\n      for (let value of cardValues) {\n        this.cards.push(new Card(cardType, value));\n      }\n    }\n    this.cards = shuffle(this.cards);\n  }\n\n  drawCard() {\n    return this.cards.pop();\n  }\n\n  getActiveCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  changeActiveCard() {\n    let activeCard = this.cards.pop();\n    this.cards.unshift(activeCard);\n  }\n\n  takeCard() {\n    let card = this.cards.pop();\n    card.faceUp();\n    return card;\n  }\n}\n\nexport default Deck;\n","class Pile {\n  setCards(cards) {\n    this.cards = cards;\n    const lastCard = this.cards[cards.length - 1];\n    lastCard.faceUp();\n  }\n\n  addCards(cards) {\n    const lastCard = this.cards[this.cards.length - 1];\n    const firstCard = cards[0];\n    if (lastCard) {\n      if (lastCard.color === firstCard.color) return false;\n      if (!lastCard.isPreviousCard(firstCard)) return false;\n    } else if (firstCard.value != \"K\") {\n      return false;\n    }\n    this.cards = this.cards.concat(cards);\n    return true;\n  }\n\n  getCards(startingCardNo) {\n    return this.cards.slice(startingCardNo - 1);\n  }\n\n  getLastCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  takeCards(cards) {\n    console.log(cards);\n    console.log(this.cards);\n    let startingCardIndex = this.cards.indexOf(cards[0]);\n    if (startingCardIndex != 0) {\n      this.cards[startingCardIndex - 1].faceUp();\n    }\n    return this.cards.splice(startingCardIndex);\n  }\n}\nexport default Pile;\n","class ReservedDeck {\n  constructor() {\n    this.cards = [];\n    this.cardsType = null;\n  }\n\n  addCards(cards) {\n    let startingCard = cards[0];\n    let lastCard = this.cards[this.cards.length - 1];\n    if (!this.cardsType) this.cardsType = startingCard.cardType;\n    if (!this.sameType(cards)) return false;\n    if (!lastCard && startingCard.value !== \"A\") return false;\n    if (lastCard && !lastCard.isNextCard(startingCard)) return false;\n    this.cards = this.cards.concat(cards);\n    return true;\n  }\n\n  sameType(cards) {\n    const sameTypeCards = cards.filter(card => card.cardType == this.cardsType);\n    return cards.length === sameTypeCards.length;\n  }\n\n  getCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  takeCard() {\n    let card = this.cards.pop();\n    card.faceUp();\n    if (this.cards.length === 0) this.cardsType = null;\n    return card;\n  }\n}\n\nexport default ReservedDeck;\n","import Deck from \"./deck\";\nimport Pile from \"./pile\";\nimport ReservedDeck from \"./ReservedDeck\";\nimport { cardTypes } from \"./constants\";\n\nclass Game {\n  constructor() {\n    this.piles = [];\n    this.reservedDecks = [];\n  }\n\n  setup() {\n    this.deck = new Deck();\n    this.setPiles();\n    this.setReservedDecks();\n    return this;\n  }\n\n  setReservedDecks() {\n    for (let cardType of cardTypes) {\n      this.reservedDecks.push(new ReservedDeck(cardType));\n    }\n  }\n\n  setPiles() {\n    for (let pileNo = 1; pileNo <= 7; pileNo++) {\n      let pile = new Pile();\n      let cards = [];\n      for (let cardNo = 1; cardNo <= pileNo; cardNo++) {\n        cards.push(this.deck.drawCard());\n      }\n      pile.setCards(cards);\n      this.piles.push(pile);\n    }\n  }\n}\n\nexport default Game;\n","import cardUnicodes from \"./cardUnicodes.js\";\nimport React from \"react\";\n\nimport \"./game.css\";\n\nimport Game from \"./model/game\";\nimport { cardValues } from \"./model/constants.js\";\n\nconst GAP_BETWEEN_CARD_OVERLAP = 8;\nconst CARD_HEIGHT = 19;\n\nfunction Card(props) {\n  let color = props.color || \"black\";\n  let top = props.top || 0;\n  let height = props.height || CARD_HEIGHT;\n  let className = props.className || \"\";\n  top += \"vh\";\n  height += \"vh\";\n  let draggable = props.draggable === undefined || props.draggable === true;\n  return (\n    <div\n      className={\"card \" + className}\n      draggable={draggable}\n      onDragStart={props.onDragStart}\n      onDoubleClick={props.onDoubleClick}\n      style={{ color, top, height }}\n      id={props.id}\n    >\n      {props.Unicode}\n    </div>\n  );\n}\n\nconst createPileCard = function(\n  card,\n  onCardDragStart,\n  onCardDoubleClick,\n  key,\n  { top, height }\n) {\n  let unicode = cardUnicodes[\"BACK\"][0];\n  let draggable = false;\n  let color = \"black\";\n  if (!card.isFacingDown()) {\n    unicode = getUnicode(card);\n    draggable = true;\n    color = card.color;\n  }\n  return (\n    <Card\n      Unicode={unicode}\n      color={color}\n      className=\"pile-card\"\n      id={key}\n      key={key}\n      top={top}\n      onDragStart={onCardDragStart}\n      onDoubleClick={onCardDoubleClick}\n      draggable={draggable}\n      height={height}\n    />\n  );\n};\n\nfunction Pile(props) {\n  let key = 0;\n  let top = -GAP_BETWEEN_CARD_OVERLAP;\n  let height = props.cards.length * GAP_BETWEEN_CARD_OVERLAP + CARD_HEIGHT;\n  let { onCardDragStart, onCardDoubleClick } = props;\n  return (\n    <div\n      className=\"pile\"\n      id={props.id}\n      onDragOver={de => de.preventDefault()}\n      onDrop={props.onCardDrop}\n    >\n      {props.cards.map(card => {\n        top += GAP_BETWEEN_CARD_OVERLAP;\n        height -= GAP_BETWEEN_CARD_OVERLAP;\n        key++;\n        return createPileCard(card, onCardDragStart, onCardDoubleClick, key, {\n          top,\n          height\n        });\n      })}\n    </div>\n  );\n}\n\nfunction ReservedDeck(props) {\n  let key = 1;\n  let cardElement = \"\";\n  if (props.card) {\n    cardElement = (\n      <Card\n        Unicode={getUnicode(props.card)}\n        onDragStart={props.onCardDragStart}\n        color={props.card.color}\n        key={key++}\n      />\n    );\n  }\n  return (\n    <div\n      className=\"reserved-deck card-holder\"\n      onDragOver={de => de.preventDefault()}\n      onDrop={props.onCardDrop}\n      id={props.id}\n    >\n      {cardElement}\n    </div>\n  );\n}\n\nclass GameComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = new Game();\n    this.state.setup();\n    this.draggingCardContainer = null;\n    this.draggingCards = [];\n  }\n\n  cardDragStart(dragEvent) {\n    const containerDiv = dragEvent.currentTarget.parentElement;\n    const containerCategory = containerDiv.parentElement.id;\n    if (containerCategory === \"deck\") {\n      this.draggingCardContainer = this.state[containerCategory];\n      this.draggingCards = [this.draggingCardContainer.getActiveCard()];\n      return;\n    }\n    this.draggingCardContainer = this.state[containerCategory][\n      containerDiv.id - 1\n    ];\n    let draggingCardNo = dragEvent.currentTarget.id;\n\n    if (this.draggingCardContainer.getCard) {\n      this.draggingCards = [this.draggingCardContainer.getCard()];\n      return;\n    }\n    this.draggingCards = this.draggingCardContainer.getCards(draggingCardNo);\n  }\n\n  cardDrop(dragEvent) {\n    const droppingContainerDiv = dragEvent.currentTarget;\n    const droppingContainerCategory = droppingContainerDiv.parentElement.id;\n    const dropingContainer = this.state[droppingContainerCategory][\n      droppingContainerDiv.id - 1\n    ];\n    const isDropped = dropingContainer.addCards(this.draggingCards);\n    if (isDropped) {\n      if (this.draggingCardContainer.takeCards)\n        this.draggingCardContainer.takeCards(this.draggingCards);\n      if (this.draggingCardContainer.takeCard)\n        this.draggingCardContainer.takeCard(this.draggingCards[0]);\n      this.setState(this.state);\n    }\n  }\n\n  handleDoubleClick(event) {\n    let pileNo = event.currentTarget.parentElement.id;\n    let card = this.state.piles[pileNo - 1].getLastCard();\n    let isPlaced = false;\n    for (let reservedDeck of this.state.reservedDecks) {\n      if (reservedDeck.addCards([card])) {\n        isPlaced = true;\n        break;\n      }\n    }\n    if (!isPlaced) return;\n    this.state.piles[pileNo - 1].takeCards([card]);\n    this.setState(this.state);\n  }\n\n  changeActiveCard() {\n    this.state.deck.changeActiveCard();\n    this.setState(this.state);\n  }\n\n  generateReservedDeckDivs() {\n    let reservedDeckDivs = [];\n    let key = 1;\n    for (let reservedDeck of this.state.reservedDecks) {\n      let div = (\n        <ReservedDeck\n          card={reservedDeck.getCard()}\n          id={key}\n          key={key++}\n          onCardDrop={this.cardDrop.bind(this)}\n          onCardDragStart={this.cardDragStart.bind(this)}\n        />\n      );\n      reservedDeckDivs.push(div);\n    }\n    return reservedDeckDivs;\n  }\n\n  generatePileDivs() {\n    let pileDivs = [];\n    let key = 1;\n    for (let pile of this.state.piles) {\n      let div = (\n        <Pile\n          cards={pile.cards}\n          id={key}\n          onCardDoubleClick={this.handleDoubleClick.bind(this)}\n          key={key++}\n          onCardDragStart={this.cardDragStart.bind(this)}\n          onCardDrop={this.cardDrop.bind(this)}\n        />\n      );\n      pileDivs.push(div);\n    }\n    return pileDivs;\n  }\n\n  render() {\n    let activeCard = this.state.deck.getActiveCard();\n\n    let reservedDeckDivs = this.generateReservedDeckDivs();\n    let pileDivs = this.generatePileDivs();\n    return (\n      <div className=\"game\">\n        <div className=\"foundation\">\n          <div className=\"deck\" id=\"deck\">\n            <div className=\"deck-cards card-holder\">\n              <Card\n                Unicode={cardUnicodes[\"BACK\"][0]}\n                draggable={false}\n                onClick={this.changeActiveCard.bind(this)}\n                key=\"1\"\n              />\n            </div>\n            <div className=\"card-holder\">\n              <Card\n                Unicode={getUnicode(activeCard)}\n                draggable={true}\n                color={activeCard.color}\n                onDragStart={this.cardDragStart.bind(this)}\n                key=\"2\"\n              />\n            </div>\n          </div>\n\n          <div className=\"deck reservedDecks\" id=\"reservedDecks\">\n            {reservedDeckDivs}\n          </div>\n        </div>\n\n        <div className=\" tableau\">\n          <div className=\"piles\" id=\"piles\">\n            {pileDivs}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction getUnicode(card) {\n  let cardValue = cardValues.indexOf(card.value);\n  let cardUnicode = cardUnicodes[card.cardType][cardValue];\n  return cardUnicode;\n}\n\nexport default GameComponent;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./index.css\";\nimport GameComponent from \"./game.js\";\n\nReactDOM.render(<GameComponent />, document.getElementById(\"root\"));\n"],"sourceRoot":""}