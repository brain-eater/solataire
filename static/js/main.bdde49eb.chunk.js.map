{"version":3,"sources":["cardUnicodes.js","model/constants.js","model/card.js","model/deck.js","model/pile.js","model/ReservedDeck.js","model/game.js","game.js","index.js"],"names":["CARDS","BACK","SPADES","HEARTS","DIAMONDS","CLUBS","cardValues","cardTypes","Card","cardType","value","Object","classCallCheck","this","facingUp","color","card","indexOf","console","log","cardIndex","thisIndex","Deck","cards","fill","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","err","return","shuffle","pop","length","activeCard","unshift","Pile","faceUp","lastCard","isPreviousCard","ReservedDeck","cardsType","isNextCard","Game","piles","reservedDecks","deck","setPiles","setReservedDecks","pileNo","pile","cardNo","drawCard","setCards","GAP_BETWEEN_CARD_OVERLAP","CARD_HEIGHT","props","top","height","draggable","react_default","a","createElement","className","onDragStart","onClick","style","Unicode","createPileCard","onCardDragStart","key","_ref","unicode","cardUnicodes","isFacingDown","getUnicode","game_Card","id","onDragOver","de","preventDefault","onDrop","onCardDrop","map","cardValue","GameComponent","_this","possibleConstructorReturn","getPrototypeOf","call","state","setup","dragEvent","containerDiv","currentTarget","parentElement","containerCategory","draggingCardContainer","droppingContainerDiv","droppingContainerCategory","addCard","getActiveCard","takeCard","setState","changeActiveCard","reservedDeckDivs","reservedDeck","div","game_ReservedDeck","cardDrop","bind","cardDragStart","pileDivs","game_Pile","_React$createElement","generateReservedDeckDivs","generatePileDivs","defineProperty","React","Component","ReactDOM","render","src_game","document","getElementById"],"mappings":"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","file":"static/js/main.bdde49eb.chunk.js","sourcesContent":["const CARDS = {\n  BACK: [\"\\uD83C\\uDCA0\"],\n  SPADES: [\n    \"\\u{1F0A1}\",\n    \"\\u{1F0A2}\",\n    \"\\u{1F0A3}\",\n    \"\\u{1F0A4}\",\n    \"\\u{1F0A5}\",\n    \"\\u{1F0A6}\",\n    \"\\u{1F0A7}\",\n    \"\\u{1F0A8}\",\n    \"\\u{1F0A9}\",\n    \"\\u{1F0AA}\",\n    \"\\u{1F0AB}\",\n    \"\\u{1F0AD}\",\n    \"\\u{1F0AE}\"\n  ],\n  HEARTS: [\n    \"\\u{1F0B1}\",\n    \"\\u{1F0B2}\",\n    \"\\u{1F0B3}\",\n    \"\\u{1F0B4}\",\n    \"\\u{1F0B5}\",\n    \"\\u{1F0B6}\",\n    \"\\u{1F0B7}\",\n    \"\\u{1F0B8}\",\n    \"\\u{1F0B9}\",\n    \"\\u{1F0BA}\",\n    \"\\u{1F0BB}\",\n    \"\\u{1F0BD}\",\n    \"\\u{1F0BE}\"\n  ],\n  DIAMONDS: [\n    \"\\u{1F0C1}\",\n    \"\\u{1F0C2}\",\n    \"\\u{1F0C3}\",\n    \"\\u{1F0C4}\",\n    \"\\u{1F0C5}\",\n    \"\\u{1F0C6}\",\n    \"\\u{1F0C7}\",\n    \"\\u{1F0C8}\",\n    \"\\u{1F0C9}\",\n    \"\\u{1F0CA}\",\n    \"\\u{1F0CB}\",\n    \"\\u{1F0CD}\",\n    \"\\u{1F0CE}\"\n  ],\n  CLUBS: [\n    \"\\u{1F0D1}\",\n    \"\\u{1F0D2}\",\n    \"\\u{1F0D3}\",\n    \"\\u{1F0D4}\",\n    \"\\u{1F0D5}\",\n    \"\\u{1F0D6}\",\n    \"\\u{1F0D7}\",\n    \"\\u{1F0D8}\",\n    \"\\u{1F0D9}\",\n    \"\\u{1F0DA}\",\n    \"\\u{1F0DB}\",\n    \"\\u{1F0DD}\",\n    \"\\u{1F0DE}\"\n  ]\n};\n\nexport default CARDS;\n","const cardValues = [\n  \"A\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"10\",\n  \"J\",\n  \"Q\",\n  \"K\"\n];\nconst cardTypes = [\"DIAMONDS\", \"HEARTS\", \"SPADES\", \"CLUBS\"];\n\nexport { cardTypes, cardValues };\n","import { cardValues } from \"./constants\";\n\nclass Card {\n  constructor(cardType, value) {\n    this.cardType = cardType;\n    this.facingUp = false;\n    this.value = value;\n    this.color = \"black\";\n    if (cardType == \"DIAMONDS\" || cardType == \"HEARTS\") this.color = \"red\";\n  }\n\n  faceUp() {\n    this.facingUp = true;\n  }\n\n  isFacingDown() {\n    return !this.facingUp;\n  }\n\n  isNextCard(card) {\n    const cardIndex = cardValues.indexOf(card.value);\n    const thisIndex = cardValues.indexOf(this.value);\n    return cardIndex - 1 == thisIndex;\n  }\n\n  isPreviousCard(card) {\n    console.log(cardValues);\n    const cardIndex = cardValues.indexOf(card.value);\n    const thisIndex = cardValues.indexOf(this.value);\n    console.log(thisIndex);\n    console.log(cardIndex);\n    return cardIndex + 1 == thisIndex;\n  }\n}\n\nexport default Card;\n","import { cardTypes, cardValues } from \"./constants\";\nimport Card from \"./card\";\nimport { shuffle } from \"lodash\";\n\nclass Deck {\n  constructor() {\n    this.cards = [];\n    this.fill();\n  }\n\n  fill() {\n    for (let cardType of cardTypes) {\n      for (let value of cardValues) {\n        this.cards.push(new Card(cardType, value));\n      }\n    }\n    this.cards = shuffle(this.cards);\n  }\n\n  drawCard() {\n    return this.cards.pop();\n  }\n\n  getActiveCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  changeActiveCard() {\n    let activeCard = this.cards.pop();\n    this.cards.unshift(activeCard);\n  }\n\n  takeCard() {\n    return this.cards.pop();\n  }\n}\n\nexport default Deck;\n","class Pile {\n  setCards(cards) {\n    this.cards = cards;\n    const lastCard = this.cards[cards.length - 1];\n    lastCard.faceUp();\n  }\n\n  addCard(card) {\n    const lastCard = this.cards[this.cards.length - 1];\n    if (lastCard.color == card.color) return false;\n    if (!lastCard.isPreviousCard(card)) return false;\n    this.cards.push(card);\n    return true;\n  }\n\n  getActiveCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  takeCard() {\n    if (this.cards.length > 1) {\n      this.cards[this.cards.length - 2].faceUp();\n    }\n    return this.cards.pop();\n  }\n}\nexport default Pile;\n","class ReservedDeck {\n  constructor() {\n    this.cards = [];\n    this.cardsType = null;\n  }\n  addCard(card) {\n    let lastCard = this.cards[this.cards.length - 1];\n    if (!lastCard && card.value != \"A\") return false;\n    if (this.cardsType && this.cardsType != card.cardType) return false;\n    console.log(lastCard);\n    if (lastCard && !lastCard.isNextCard(card)) return false;\n    this.cardsType = card.cardType;\n    this.cards.push(card);\n    return true;\n  }\n\n  getActiveCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  takeCard() {\n    return this.cards.pop();\n  }\n}\n\nexport default ReservedDeck;\n","import Deck from \"./deck\";\nimport Pile from \"./pile\";\nimport ReservedDeck from \"./ReservedDeck\";\nimport { cardTypes } from \"./constants\";\n\nclass Game {\n  constructor() {\n    this.piles = [];\n    this.reservedDecks = [];\n  }\n\n  setup() {\n    this.deck = new Deck();\n    this.setPiles();\n    this.setReservedDecks();\n    return this;\n  }\n\n  setReservedDecks() {\n    for (let cardType of cardTypes) {\n      this.reservedDecks.push(new ReservedDeck(cardType));\n    }\n  }\n\n  setPiles() {\n    for (let pileNo = 1; pileNo <= 7; pileNo++) {\n      let pile = new Pile();\n      let cards = [];\n      for (let cardNo = 1; cardNo <= pileNo; cardNo++) {\n        cards.push(this.deck.drawCard());\n      }\n      pile.setCards(cards);\n      this.piles.push(pile);\n    }\n  }\n}\n\nexport default Game;\n","import cardUnicodes from \"./cardUnicodes.js\";\nimport React from \"react\";\n\nimport \"./game.css\";\n\nimport Game from \"./model/game\";\nimport { cardValues } from \"./model/constants.js\";\n\nconst GAP_BETWEEN_CARD_OVERLAP = 8;\nconst CARD_HEIGHT = 19;\n\nfunction Card(props) {\n  let color = props.color || \"black\";\n  let top = props.top || 0;\n  let height = props.height || CARD_HEIGHT;\n  top += \"vh\";\n  height += \"vh\";\n  let draggable = props.draggable == undefined || props.draggable == true;\n  return (\n    <div\n      className={\"card \" + props.className}\n      draggable={draggable}\n      onDragStart={props.onDragStart}\n      onClick={props.onClick}\n      style={{ color, top, height }}\n    >\n      {props.Unicode}\n    </div>\n  );\n}\n\nconst createPileCard = function(card, onCardDragStart, key, { top, height }) {\n  let unicode = cardUnicodes[\"BACK\"][0];\n  let draggable = false;\n  let color = \"black\";\n  if (!card.isFacingDown()) {\n    unicode = getUnicode(card);\n    draggable = true;\n    color = card.color;\n  }\n  return (\n    <Card\n      Unicode={unicode}\n      color={color}\n      className=\"pile-card\"\n      key={key++}\n      top={top}\n      onDragStart={onCardDragStart}\n      draggable={draggable}\n      height={height}\n    />\n  );\n};\n\nfunction Pile(props) {\n  let key = 1;\n  let top = -GAP_BETWEEN_CARD_OVERLAP;\n  let height = props.cards.length * GAP_BETWEEN_CARD_OVERLAP + CARD_HEIGHT;\n  return (\n    <div\n      className=\"pile\"\n      id={props.id}\n      onDragOver={de => de.preventDefault()}\n      onDrop={props.onCardDrop}\n    >\n      {props.cards.map(card => {\n        top += GAP_BETWEEN_CARD_OVERLAP;\n        height -= GAP_BETWEEN_CARD_OVERLAP;\n        return createPileCard(card, props.onCardDragStart, key, {\n          top,\n          height\n        });\n      })}\n    </div>\n  );\n}\n\nfunction ReservedDeck(props) {\n  let key = 1;\n  return (\n    <div\n      className=\"reserved-deck\"\n      onDragOver={de => de.preventDefault()}\n      onDrop={props.onCardDrop}\n      id={props.id}\n    >\n      {props.cards.map(card => (\n        <Card\n          Unicode={getUnicode(card)}\n          onDragStart={props.onCardDragStart}\n          color={card.color}\n          key={key++}\n        />\n      ))}\n    </div>\n  );\n}\n\nclass GameComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = new Game();\n    this.state.setup();\n  }\n\n  cardDragStart(dragEvent) {\n    const containerDiv = dragEvent.currentTarget.parentElement;\n    const containerCategory = containerDiv.parentElement.id;\n    if (containerCategory == \"deck\") {\n      this.state.draggingCardContainer = this.state[containerCategory];\n      return;\n    }\n    this.state.draggingCardContainer = this.state[containerCategory][\n      containerDiv.id - 1\n    ];\n  }\n\n  cardDrop(dragEvent) {\n    const droppingContainerDiv = dragEvent.currentTarget;\n    const droppingContainerCategory = droppingContainerDiv.parentElement.id;\n    const dropingContainer = this.state[droppingContainerCategory][\n      droppingContainerDiv.id - 1\n    ];\n    const isDropped = dropingContainer.addCard(\n      this.state.draggingCardContainer.getActiveCard()\n    );\n    if (isDropped) {\n      this.state.draggingCardContainer.takeCard().faceUp();\n      this.setState(this.state);\n    }\n  }\n\n  changeActiveCard() {\n    this.state.deck.changeActiveCard();\n    this.setState(this.state);\n  }\n\n  generateReservedDeckDivs() {\n    let reservedDeckDivs = [];\n    let key = 1;\n    for (let reservedDeck of this.state.reservedDecks) {\n      let div = (\n        <ReservedDeck\n          cards={reservedDeck.cards}\n          id={key}\n          key={key++}\n          onCardDrop={this.cardDrop.bind(this)}\n          onCardDragStart={this.cardDragStart.bind(this)}\n        />\n      );\n      reservedDeckDivs.push(div);\n    }\n    return reservedDeckDivs;\n  }\n\n  generatePileDivs() {\n    let pileDivs = [];\n    let key = 1;\n    for (let pile of this.state.piles) {\n      let div = (\n        <Pile\n          cards={pile.cards}\n          id={key}\n          key={key++}\n          onCardDragStart={this.cardDragStart.bind(this)}\n          onCardDrop={this.cardDrop.bind(this)}\n        />\n      );\n      pileDivs.push(div);\n    }\n    return pileDivs;\n  }\n\n  render() {\n    let activeCard = this.state.deck.getActiveCard();\n\n    let reservedDeckDivs = this.generateReservedDeckDivs();\n    let pileDivs = this.generatePileDivs();\n    return (\n      <div className=\"game\">\n        <div className=\"horizontal-layer\">\n          <div className=\"deck\" id=\"deck\">\n            <div>\n              <Card\n                Unicode={cardUnicodes[\"BACK\"][0]}\n                draggable={false}\n                onClick={this.changeActiveCard.bind(this)}\n                key=\"1\"\n              />\n            </div>\n            <div>\n              <Card\n                onDragStart={this.onDragStart}\n                Unicode={getUnicode(activeCard)}\n                draggable={true}\n                color={activeCard.color}\n                onDragStart={this.cardDragStart.bind(this)}\n                key=\"2\"\n              />\n            </div>\n          </div>\n\n          <div className=\"deck\" id=\"reservedDecks\">\n            {reservedDeckDivs}\n          </div>\n        </div>\n\n        <div className=\"horizontal-layer tableau\">\n          <div className=\"piles\" id=\"piles\">\n            {pileDivs}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction getUnicode(card) {\n  let cardValue = cardValues.indexOf(card.value);\n  let cardUnicode = cardUnicodes[card.cardType][cardValue];\n  return cardUnicode;\n}\n\nexport default GameComponent;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./index.css\";\nimport GameComponent from \"./game.js\";\n\nReactDOM.render(<GameComponent />, document.getElementById(\"root\"));\n"],"sourceRoot":""}